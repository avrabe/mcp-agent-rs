[package]
name = "mcp-agent"
version = "0.1.0"
edition = "2021"
authors = ["MCP Team <team@mcp-agent.org>"]
description = "Agent implementation for the Model Context Protocol"
license = "MIT"
repository = "https://github.com/yourusername/mcp-agent"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
tokio = { version = "1.36.0", features = ["full"] }
axum = { version = "0.7.4", features = ["ws"], optional = true }
futures = { version = "0.3.30", features = ["std"] }
uuid = { version = "1.7.0", features = ["v4", "serde"] }
serde = { version = "1.0.197", features = ["derive"] }
serde_json = "1.0.114"
thiserror = "1.0.56"
log = "0.4.20"
env_logger = "0.9.3"
bytes = "1.5.0"
validator = { version = "0.16.1", features = ["derive"] }
chrono = { version = "0.4.33", features = ["serde"] }
serde_yaml = "0.9.31"
serde_bytes = "0.11.14"
bytemuck = { version = "1.15.0", features = ["derive"] }
rustyline = "9.1.2"
criterion = "0.5.1"
proptest = "1.4.0"
rand = "0.8.5"
tokio-test = "0.4.3"
colored = "2.1.0"
reqwest = { version = "0.11.24", features = ["json"], optional = true }
anyhow = "1.0.80"
# Transport layer dependencies
tokio-tungstenite = { version = "0.21.0", optional = true }
url = "2.5.0"
futures-util = "0.3.30"
async-trait = "0.1.79"
axum-server = { version = "0.6.0", features = ["tls-rustls"], optional = true }

# Terminal system dependencies
tower-http = { version = "0.5.2", features = ["fs", "cors", "auth", "trace"], optional = true }
jsonwebtoken = { version = "9.2.0", optional = true }
arc-swap = { version = "1.6.0", optional = true }
rustls = { version = "0.22.1", optional = true }

# Added OpenTelemetry dependencies
tracing = "0.1.40"
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }
once_cell = "1.21.1"

# Add feature flags for OpenTelemetry
[features]
default = []
test-util = ["tokio/test-util"]
server_registry = []
telemetry-jaeger = ["opentelemetry", "opentelemetry_sdk", "opentelemetry-jaeger", "tracing-opentelemetry"]
telemetry-otlp = ["opentelemetry", "opentelemetry_sdk", "opentelemetry-otlp", "tracing-opentelemetry"]
ollama = ["reqwest"]
# Terminal feature flags
terminal-web = ["axum", "tower-http", "jsonwebtoken"]
terminal-full = ["terminal-web", "jsonwebtoken", "rustls"]
# Transport feature flags
transport-http = ["reqwest"]
transport-ws = ["tokio-tungstenite", "axum", "axum-server"]

# Optional dependencies
[dependencies.opentelemetry]
version = "0.21.0"
features = ["trace", "metrics"]
optional = true

[dependencies.opentelemetry_sdk]
version = "0.21.2"
features = ["trace", "rt-tokio"]
optional = true

[dependencies.opentelemetry-jaeger]
version = "0.20.0"
optional = true

[dependencies.opentelemetry-otlp]
version = "0.14.0"
features = ["trace", "metrics", "http-proto"]
optional = true

[dependencies.tracing-opentelemetry]
version = "0.22.0"
optional = true

[dev-dependencies]
tokio-test = "0.4"
proptest = "1.3"
criterion = "0.5"
tokio-tungstenite = "0.21.0"

[[example]]
name = "simple_client"
path = "../examples/simple_mcp_example/simple_client.rs"

[[example]]
name = "parallel_workflow"
path = "examples/parallel_workflow/main.rs"

[[example]]
name = "orchestrator_workflow"
path = "examples/orchestrator_workflow/main.rs"

[[example]]
name = "router_workflow"
path = "examples/router_workflow/main.rs"

[[example]]
name = "pipeline_workflow"
path = "examples/pipeline_workflow/main.rs"

[[example]]
name = "retry_workflow"
path = "examples/retry_workflow/main.rs"

[[example]]
name = "conditional_workflow"
path = "examples/conditional_workflow/main.rs"

[[example]]
name = "state_machine_workflow"
path = "examples/state_machine_workflow/main.rs"

[[example]]
name = "saga_workflow"
path = "examples/saga_workflow/main.rs"

[[example]]
name = "event_driven_workflow"
path = "examples/event_driven_workflow/main.rs"

[[example]]
name = "fan_out_fan_in_workflow"
path = "examples/fan_out_fan_in_workflow/main.rs"

[[example]]
name = "human_input_example"
path = "examples/human_input_example/main.rs"

[[example]]
name = "jsonrpc_example"
path = "examples/jsonrpc_example/main.rs"
required-features = []

# Terminal system examples
[[example]]
name = "dual_terminal"
path = "examples/dual_terminal/main.rs"
required-features = ["terminal-full"]

[[example]]
name = "workflow_visualizer"
path = "examples/workflow_visualizer.rs"

[[example]]
name = "simple_workflow_runner"
path = "examples/simple_workflow_runner.rs"

[[example]]
name = "basic_workflow"
path = "examples/basic_workflow.rs"

[[example]]
name = "dependency_workflow"
path = "examples/dependency_workflow.rs"

[[example]]
name = "graph_visualization"
path = "examples/graph_visualization.rs"
# This standalone example doesn't require terminal-web feature

[[example]]
name = "simple_graph"
path = "examples/simple_graph.rs"
required-features = ["terminal-web"]
