[package]
name = "mcp-agent"
version = "0.1.0"
edition = "2021"
authors = ["MCP Team <team@mcp-agent.org>"]
description = "Agent implementation for the Model Context Protocol"
license = "MIT"
repository = "https://github.com/yourusername/mcp-agent"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
tokio = { version = "1.36.0", features = ["full"] }
axum = { version = "0.7.4", features = ["ws"], optional = true }
futures = { version = "0.3.30", features = ["std"] }
uuid = { version = "1.7.0", features = ["v4", "serde"] }
serde = { version = "1.0.197", features = ["derive"] }
serde_json = "1.0.113"
thiserror = "1.0.57"
bytes = "1.5.0"
once_cell = "1.19.0"
chrono = { version = "0.4.35", features = ["serde"] }
log = "0.4.21"
tracing = "0.1.40"
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }
opentelemetry = { version = "0.28.0", optional = true }
opentelemetry-otlp = { version = "0.14.0", features = ["metrics", "trace"], optional = true }
opentelemetry_sdk = { version = "0.28.0", features = ["rt-tokio"], optional = true }
opentelemetry-zipkin = { version = "0.18.0", optional = true }
opentelemetry-jaeger = { version = "0.19.0", optional = true }
ratatui = { version = "0.26.0", features = ["crossterm"] }
crossterm = "0.27.0"
rustyline = "12.0.0"
webbrowser = "0.8.13"
clap = { version = "4.5.1", features = ["derive"] }
axum-extra = "0.9.2"
tokio-stream = "0.1.14"
tower-http = { version = "0.5.1", features = ["cors"] }
tower = "0.4.13"
ctrlc = "3.4.2"
jsonwebtoken = "9.2.0"
colored = "2.1.0"
reqwest = { version = "0.11.24", features = ["json"], optional = true }
anyhow = "1.0.80"
# Transport layer dependencies
tokio-tungstenite = { version = "0.21.0", optional = true }
url = "2.5.0"
futures-util = "0.3.30"
async-trait = "0.1.79"
axum-server = { version = "0.6.0", features = ["tls-rustls"], optional = true }

# Terminal system dependencies
crossterm_cursor = "0.4.0"
crossterm_winapi = "0.7.0"
base64 = "0.21.7"

# LLM integration dependencies
ollama-rs = "0.1.8"
tungstenite = "0.21.0"

# Add feature flags for OpenTelemetry
[features]
default = ["terminal", "terminal-web", "tracing", "transport-ws", "human-input", "llm-integration", "transport-http", "ollama", "terminal-full"]
terminal = []
terminal-web = ["axum", "reqwest"]
tracing = ["opentelemetry", "opentelemetry_sdk"]
transport-ws = ["tokio-tungstenite", "axum-server"]
human-input = []
llm-integration = []

# Terminal system examples
[[example]]
name = "dual_terminal"
path = "examples/dual_terminal/main.rs"
required-features = ["terminal-full"]

[[example]]
name = "workflow_visualizer"
path = "examples/workflow_visualizer.rs"

[[example]]
name = "simple_workflow_runner"
path = "examples/simple_workflow_runner.rs"

[[example]]
name = "basic_workflow"
path = "examples/basic_workflow.rs"

[[example]]
name = "dependency_workflow"
path = "examples/dependency_workflow.rs"

[[example]]
name = "graph_visualization"
path = "examples/graph_visualization.rs"
# This standalone example doesn't require terminal-web feature

[[example]]
name = "simple_graph"
path = "examples/simple_graph.rs"
required-features = ["terminal-web"]
# Additional dependencies added to fix examples
rand = "0.8.5"
serde_yaml = "0.9.31"
rustls = { version = "0.22.1", optional = true }
transport-http = ["reqwest"]
ollama = ["reqwest"]
terminal-full = ["terminal-web", "rustls"]
